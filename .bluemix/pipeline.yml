---
stages:
- name: SelfAssembly
  inputs:
  - type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: WrapPresent
    type: builder
    artifact_dir: ./
    build_type: shell
    script: |-
      #!/bin/bash
      # Â© Copyright IBM Corporation 2015.
      #
      # All rights reserved. This program and the accompanying materials
      # are made available under the terms of the Eclipse Public License v1.0
      # which accompanies this distribution, and is available at
      # http://www.eclipse.org/legal/epl-v10.html
      # Derived from dW article @ https://developer.ibm.com/bluemix/2014/02/17/deploy-drupal-application-ibm-bluemix/
      ##########
      # Colors - Lets have some fun ##
      ##########
      Green='\e[0;32m'
      Red='\e[0;31m'
      Yellow='\e[0;33m'
      Cyan='\e[0;36m'
      no_color='\e[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      #############
      echo ""
      echo -e "${cloud}${Cyan}  Let's setup Drupal for initial deployment${no_color}"
      echo -e "${tools}${Yellow}    Updating apt-get ...${no_color}"
      # sudo apt-get update > /dev/null 2>&1
      # Install jq
      echo -e "${tools}${Yellow}    Installing jq for JSON parsing support...${no_color}"
      sudo apt-get --assume-yes install jq > /dev/null 2>&1
      echo -e "${tools}${Yellow}    Installing zip/unzip...${no_color}"
      sudo apt-get --assume-yes install zip unzip > /dev/null 2>&1
      
      # Let's pull the open source code for Twilio-php SDK
      echo -e "${harpoons}${Yellow}    Updating git submodules ...${no_color}"
      git submodule update --init --recursive > /dev/null 2>&1
      
      echo -e "${harpoons}${Yellow}    Cloning latest Drupal DKAN ...${no_color}"
      mkdir htdocs
      git clone https://github.com/NuCivic/dkan-drops-7.git ./htdocs/dkan-drops > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}    Setting up default site folders ...${no_color}"
      mv ./bluezone/configtweaks/files ./htdocs/dkan-drops/sites/default
      
      echo -e "${tools}${Yellow}    Setting up best practice modules, libraries, themes  ...${no_color}"
      # In many cases, these are updated modules highlighted after the default DKAN install
      # Some of the latter modules starting from security review help to create a snappy responsive deploy
      # Pre-emptive measure to simply download and install them during setup
      rooturl=http://ftp.drupal.org/files/projects/
      desiredModule[0]=adminrole-7.x-1.1.zip
      desiredModule[1]=beautytips-7.x-2.0-beta2.zip
      desiredModule[2]=bueditor-7.x-1.8.zip
      desiredModule[3]=colorizer-7.x-1.8.zip
      desiredModule[4]=date-7.x-2.9.zip
      desiredModule[5]=defaultconfig-7.x-1.0-alpha11.zip
      desiredModule[6]=dkan_dataset-7.x-1.8.zip
      desiredModule[7]=double_field-7.x-2.4.zip
      desiredModule[8]=eck-7.x-2.0-rc8.zip
      desiredModule[9]=facetapi-7.x-1.5.zip
      desiredModule[10]=facetapi_pretty_paths-7.x-1.4.zip
      desiredModule[11]=features-7.x-2.7.zip
      desiredModule[12]=feeds-7.x-2.0-beta1.zip
      desiredModule[13]=feeds_field_fetcher-7.x-1.x-dev.zip
      desiredModule[14]=field_group-7.x-1.4.zip
      desiredModule[15]=filefield_sources-7.x-1.10.zip
      desiredModule[16]=libraries-7.x-2.2.zip
      desiredModule[17]=link-7.x-1.3.zip
      desiredModule[18]=multistep-7.x-1.x-dev.zip
      desiredModule[19]=og_moderation-7.x-2.3.zip
      desiredModule[20]=pathauto-7.x-1.3.zip
      desiredModule[21]=rdfx-7.x-2.0-alpha4.zip
      desiredModule[22]=remote_stream_wrapper-7.x-1.0-rc1.zip
      desiredModule[23]=restws-7.x-2.4.zip
      desiredModule[24]=rules-7.x-2.9.zip
      desiredModule[25]=search_api-7.x-1.16.zip
      desiredModule[26]=select_or_other-7.x-2.22.zip
      desiredModule[27]=token-7.x-1.6.zip
      desiredModule[28]=uuid-7.x-1.0-beta1.zip
      desiredModule[29]=radix-7.x-3.1.zip
      desiredModule[30]=security_review-7.x-1.2.zip
      desiredModule[31]=missing_module-7.x-1.0.zip
      desiredModule[32]=advagg-7.x-2.17.zip
      desiredModule[33]=httprl-7.x-1.14.zip
      desiredModule[34]=expire-7.x-2.0-rc4.zip
      desiredModule[35]=entitycache-7.x-1.5.zip
      desiredModule[36]=ctools-7.x-1.9.zip
      desiredModule[37]=advanced_help-7.x-1.3.zip
      desiredModule[38]=redis-7.x-3.11.zip
      desiredModule[39]=varnish-7.x-1.0-beta3.zip
      
      echo -e "${tools}${Cyan}      Installing Predis Redis Client Library ...${no_color}"
      wget https://github.com/nrk/predis/archive/v1.0.3.zip -nv -O ./bluezone/predis.zip
      unzip -o ./bluezone/predis.zip -d ./htdocs/dkan-drops/sites/all/libraries > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}      Installing CorporateClean Theme ...${no_color}"
      wget http://ftp.drupal.org/files/projects/corporateclean-7.x-2.3.zip -nv -O ./bluezone/corpclean.zip
      unzip -o ./bluezone/corpclean.zip -d ./htdocs/dkan-drops/sites/all/themes > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}      Installing Latest DKAN Module ...${no_color}"
      wget https://api.github.com/repos/NuCivic/dkan/zipball/7.x-1.x -nv -O ./bluezone/dkanmod.zip
      unzip -o ./bluezone/dkanmod.zip -d ./htdocs/dkan-drops/sites/all/modules/contrib > /dev/null 2>&1

      for (( i = 0 ; i < ${#desiredModule[@]} ; i++ )) 
        do 
          echo -e "${tools}${Cyan}      Installing Security Review Module ...${no_color}"
          wget $rooturl/${desiredModule[$i]} -nv -O ./bluezone/${desiredModule[$i]}
          unzip -o ./bluezone/${desiredModule[$i]} -d ./htdocs/dkan-drops/sites/all/modules/contrib > /dev/null 2>&1
        done 
        unset desiredModule 
        unset rooturl
      exit
      
      echo -e "${tools}${Red}      Patching Varnish Module to fix theme_hook_original on port bug ...${no_color}"
      echo -e "${tools}${Yellow}      Reference: https://www.drupal.org/node/2371907#comment-9468011 ${no_color}"
      wget https://www.drupal.org/files/issues/varnish-2371907-24.patch -nv -O ./varnish-2371907-24.patch
      patch -d ./htdocs/dkan-drops/sites/all/modules/contrib/varnish < ./varnish-2371907-24.patch
      rm varnish-2371907-24.patch
      
      echo -e "${tools}${Cyan}    Setting up user provided modules, themes and libraries ...${no_color}"
      for f in ./bluezone/configtweaks/libraries/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Libraries ...${no_color}"
              mv $f ./htdocs/dkan-drops/sites/all/libraries
          else
              echo -e "${fail}${Cyan}      No User-Provided Libraries detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/modules/contrib/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Contrib Modules ...${no_color}"
              mv $f ./htdocs/dkan-drops/sites/all/modules/contrib
          else
              echo -e "${fail}${Cyan}      No User-Provided Contrib Modules detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/modules/custom/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Custom Modules ...${no_color}"
              mv $f ./htdocs/dkan-drops/sites/all/modules/custom
          else
              echo -e "${fail}${Cyan}      No User-Provided Custom Modules detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/themes/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Themes ...${no_color}"
              mv $f ./htdocs/dkan-drops/sites/all/themes
          else
              echo -e "${fail}${Cyan}      No User-Provided Themes detected...${no_color}"
          fi
      done
      
      # Organize the artifact structure to be CF PHP Buildpack friendly
      echo -e "${cloud}${Yellow}    Making artifacts CF PHP friendly ...${no_color}"
      mv ./bluezone/configtweaks/.bp-config .
      mkdir .extensions
      mv ./bluezone/configtweaks/.php-extensions .
      
      # echo -e "${cloud}${Yellow}    Installing Loadtest verification token ...${no_color}"
      # echo -e "loaderio-a34735f2d043b82eb8a1105144b1ab99" > ./htdocs/drupal-7.41/loaderio-a34735f2d043b82eb8a1105144b1ab99.txt
      
      # Organize the artifact structure to facilitate BMX deploy
      echo -e "${cloud}${Yellow}    Making drupal artifacts ${Cyan}Bluemix ${Yellow}friendly ...${no_color}"
      mv ./bluezone/configtweaks/.user.ini ./htdocs/dkan-drops
      
      echo -e "${cloud}${Yellow}    Hardening drupal .htaccess ...${no_color}"
      echo -e "" >> ./htdocs/dkan-drops/.htaccess
      echo -e "# Forces a redirect to SSL" >> ./htdocs/dkan-drops/.htaccess
      echo -e "RewriteCond %{HTTPS} off" >> ./htdocs/dkan-drops/.htaccess
      echo -e "RewriteCond %{HTTP:X-Forwarded-Proto} !https" >> ./htdocs/dkan-drops/.htaccess
      echo -e "RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "" >> ./htdocs/dkan-drops/.htaccess
      echo -e "# Enforces an Expires header for responses to content" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<ifmodule mod_expires.c>" >> ./htdocs/dkan-drops/.htaccess
      echo -e "ExpiresActive On" >> ./htdocs/dkan-drops/.htaccess
      echo -e "ExpiresDefault A0" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up caching on media files for 1 year (forever?)" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    ExpiresDefault A29030400" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up caching on media files for 4 week" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(gif|jpg|jpeg|png|swf)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    ExpiresDefault A2419200" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up 2 week caching on commonly updated files" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(xml|txt|html|js|css)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    ExpiresDefault A1209600" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Force no caching for dynamic files" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(php|cgi|pl|htm)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    ExpiresActive Off" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</ifmodule>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Sets up cache-control headers for responses to content" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<ifmodule mod_headers.c>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up caching on media files for 1 year (forever?)" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    Header append Cache-Control \"public\"" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up caching on media files for 4 week" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(gif|jpg|jpeg|png|swf)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    Header append Cache-Control \"public\"" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Set up 2 week caching on commonly updated files" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(xml|txt|html|js|css)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    Header append Cache-Control \"proxy-revalidate\"" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Force no caching for dynamic files" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<FilesMatch \"\.(php|cgi|pl|htm)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    Header set Cache-Control \"private, no-cache, no-store, proxy-revalidate, no-transform\"" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    Header set Pragma \"no-cache\"" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</ifmodule>" >> ./htdocs/dkan-drops/.htaccess
      
      echo -e "# Lets setup some compression for more speed" >> ./htdocs/dkan-drops/.htaccess
      echo -e "<ifModule mod_deflate.c>" >> ./htdocs/dkan-drops/.htaccess
      echo -e "  <FilesMatch \"\.(js|css)$\">" >> ./htdocs/dkan-drops/.htaccess
      echo -e "    SetOutputFilter DEFLATE" >> ./htdocs/dkan-drops/.htaccess
      echo -e "  </FilesMatch>" >> ./htdocs/dkan-drops/.htaccess
      echo -e "</ifModule>" >> ./htdocs/dkan-drops/.htaccess

      # mv ./bluezone/configtweaks/.htaccess ./htdocs/dkan-drops
      #
      # Embed config file if provided
      if [ -f "./bluezone/configtweaks/settings.php" ]; then
         echo -e "${tools}${Cyan}    Drupal Config file detected ...${no_color}"
         mv ./bluezone/configtweaks/settings.php ./htdocs/dkan-drops/sites/default
      else
         echo -e "${tools}${Cyan}    NO Drupal Config file detected, using default ...${no_color}"
         cp ./htdocs/dkan-drops/sites/default/default.settings.php ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$application = getenv(\"VCAP_APPLICATION\");" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$application_json = json_decode(\$application,true);" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "if (isset(\$application_json[\"application_uris\"])) {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "  \$base_url = \"https://\" . \$application_json[\"application_uris\"][0];" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "}" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$services = getenv(\"VCAP_SERVICES\");" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$services_json = json_decode(\$services,true);" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "if (isset(\$services_json)) {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "  if (isset(\$services_json[\"user-provided\"])) {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "     foreach(\$services_json[\"user-provided\"] as \$item) {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "       if (\$item[\"name\"] == \"drupaldb\") {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "         \$postgres_config = \$item[\"credentials\"];" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "         list(\$hostname, \$port) = explode(':', \$postgres_config[\"public_hostname\"]);" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "         \$dbname = 'compose';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "       } elseif (\$item[\"name\"] == \"drupalredis\") {" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "         \$redis_config = \$item[\"credentials\"];" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "         list(\$rhostname, \$rport) = explode(':', \$redis_config[\"public_hostname\"]);" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "       }" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "     }" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "   }" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "}" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$databases = array (" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "  'default' =>" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "  array (" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "    'default' =>" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "    array (" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'driver' => 'pgsql'," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'database' => \$dbname," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'username' => \$postgres_config[\"username\"]," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'password' => \$postgres_config[\"password\"]," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'host' => \$hostname," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'port' => \$port," >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "      'prefix' => 'main_'" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "    )" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "  )" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e ");" >> ./htdocs/dkan-drops/sites/default/settings.php
      
         # Useful only if Redis Caching is desired
         # Reference: http://dropbucket.org/node/242
         # Reference: https://redislabs.com/drupal-redis
         echo -e "/*" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "// Setup Redis Cache for Drupal if service is available" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "define('PREDIS_BASE_PATH', DRUPAL_ROOT . '/sites/all/libraries/predis-1.0.3/');" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['redis_client_interface'] = 'Predis';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['redis_client_host'] = \$rhostname;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['redis_client_port'] = \$rport;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['redis_client_password'] = \$redis_config[\"password\"];" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['lock_inc'] = 'sites/all/modules/contrib/redis/redis.lock.inc';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_backends'][] = 'sites/all/modules/contrib/redis/redis.autoload.inc';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_default_class'] = 'Redis_Cache';" >> ./htdocs/dkan-drops/sites/default/settings.php 
         echo -e "*/" >> ./htdocs/dkan-drops/sites/default/settings.php
      
         echo -e "" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "//Tell Drupal it is behind a proxy" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['reverse_proxy'] = TRUE;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_backends'][] = 'sites/all/modules/contrib/varnish/varnish.cache.inc';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "// Tell Drupal what addresses the proxy server(s) use." >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['reverse_proxy_addresses'] = array('127.0.0.1');" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['page_cache_invoke_hooks'] = FALSE;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache'] = 1;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_lifetime'] = 0;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['page_cache_maximum_age'] = 600;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_class_cache_form'] = 'DrupalDatabaseCache';" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['cache_class_cache_page'] = 'DrupalDatabaseCache';" >> ./htdocs/dkan-drops/sites/default/settings.php 
         echo -e "\$conf['omit_vary_cookie'] = true;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "drupal_fast_404();" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['drupal_http_request_fails'] = FALSE;" >> ./htdocs/dkan-drops/sites/default/settings.php
         echo -e "\$conf['allow_authorize_operations'] = FALSE;" >> ./htdocs/dkan-drops/sites/default/settings.php
      fi
      
      # Cleaning up
      echo -e "${litter}${Yellow}    Cleaning up repository...${no_color}"
      rm -rf ./bluezone
      rm -rf .bluemix
      
      # Generate Config Fetcher Script
      IFS='|' read -ra PROJECT_NAME <<< "$IDS_PROJECT_NAME"
      echo -e "${tools}${Yellow}    Generating config helper download script...${no_color}"
      echo -e "#!/bin/bash" > fetchConfig.sh
      echo -e "rm ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      echo -e "cf files${PROJECT_NAME[1]} /app/htdocs/dkan-drops/sites/default/settings.php > ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      echo -e "sed -i -e '1,3d' ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      chmod +x fetchConfig.sh
      echo -e "${present} ${beers}${Green}  Way to go! Your Drupal Assembly present is ready!"
- name: SameDayDelivery
  inputs:
  - type: job
    stage: SelfAssembly
    job: WrapPresent
  triggers:
  - type: stage
  jobs:
  - name: OpenPresent
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      # Â© Copyright IBM Corporation 2015.
      #
      # All rights reserved. This program and the accompanying materials
      # are made available under the terms of the Eclipse Public License v1.0
      # which accompanies this distribution, and is available at
      # http://www.eclipse.org/legal/epl-v10.html
      # For some reason, the deploy stage shell has tracing turned on.  Lets turn it off
      set +x
      ##########
      # Colors - Lets have some fun ##
      ##########
      Green='\e[0;32m'
      Red='\e[0;31m'
      Yellow='\e[0;33m'
      Cyan='\e[0;36m'
      no_color='\e[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      #############
      # http://serverfault.com/questions/7503/how-to-determine-if-a-bash-variable-is-empty#answer-382740
      if [ -z $(cf s|grep drupaldb|cut -d" " -f1-1) ]; then
        echo -e "${fail}${Red}  PostGresql Service Instance [${Yellow}drupaldb${Red}] was not found${no_color}"
        return 1
      fi
      
      if [ -z $(cf s|grep drupalredis|cut -d" " -f1-1) ]; then
        echo -e "${fail}${Red}  Redis Service Instance [${Yellow}drupalredis${Red}] was not found${no_color}"
      fi

      echo -e "${tools}${Yellow}  Sendgrid detection routine ...${no_color}" > /dev/null 2>&1
      if [ -n $(cf s|grep sendgrid|cut -d" " -f1-1) ] && [ $(cf s|grep sendgrid|cut -d" " -f1-1) != "sendmail" ]; then
        echo -e "${eyes}${Yellow}   Detected existing sendgrid service ${existingSendgrid} within target space${no_color}"
        echo -e "${tools}${Yellow}    Updating manifest.yml file to match target space sendgrid service${no_color}"
        sed -e "s/sendmail/$(cf s|grep sendgrid|cut -d" " -f1-1)/g" ./manifest.yml > manifest.new
        rm manifest.yml
        mv manifest.new manifest.yml
      else
        echo -e "${fail}${Red}    Sendgrid Service ${Yellow}sendmail${Red} was not available${no_color}"
      fi

      p=0
      until [ $p -ge 2 ]
      do
         cf push "${CF_APP}" && echo -e "${beer} ${beers}${Green}  Congrats! Your secure Drupal deploy is up and running!${no_color}" && echo -e "${beer} ${beers}${Green}  finis coronat opus${no_color}" && break
         p=$[$p+1]
         sleep 10
      done
      # view logs
      #cf logs "${CF_APP}" --recent

